// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  theme    = "forest"
}

enum StatusEnum {
  Andamento
  Finalizada
  NFinalizada
}

enum TimeEnum {
  On
  Chuva
  Noite
  Feriado
  Brecha
}

model Filial {
  id          String   @id @default(cuid())
  nome        String   @unique @db.VarChar(100)
  endereco    String   @unique
  localizacao String   @unique
  status      TimeEnum @default(On)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //relações
  clientes   Cliente[]
  motoristas Motorista[]
  Adm        Adm[]
  Veiculo    Veiculo[]
  contacto   Contacto_filial[]

  @@map("Filias")
}

model Adm {
  id        String   @id @default(cuid())
  nome      String   @db.VarChar(150)
  senha     String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  filialId  String   @unique

  //relações
  filial Filial @relation(fields: [filialId], references: [id])

  @@map("Funcionarios")
}

model Motorista {
  id          String    @id @default(cuid())
  nome        String    @db.VarChar(150)
  email       String    @unique
  telefone    String    @unique @db.VarChar(9)
  numeroBI    String    @unique
  nascimento  DateTime
  avatar      String?
  localizacao String
  filialId    String
  veiculoId   String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //relações
  filial      Filial    @relation(fields: [filialId], references: [id])
  veiculo     Veiculo   @relation(fields: [veiculoId], references: [id])
  recolhas    Recolha[]

  @@map("Motoristas")
}

model Veiculo {
  id         String      @id @default(cuid())
  modelo     String      @db.VarChar(40)
  matricula  String      @unique @db.VarChar(15)
  filialId   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  //relações
  filial     Filial      @relation(fields: [filialId], references: [id])
  motoristas Motorista[]

  @@map("Veiculos")
}

model Cliente {
  id          String   @id @default(cuid())
  nome        String   @db.VarChar(250)
  numeroBI    String   @unique
  avatar      String?
  endereco    String
  coordenadas String   @unique
  nascimento  DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  filialId    String

  //relações
  filial   Filial              @relation(fields: [filialId], references: [id])
  contacto Contacto_clientes[]
  recolhas Recolha[]

  @@map("Clientes")
}

model Contacto_clientes {
  id        String   @id @default(cuid())
  clienteId String
  telefone  String   @unique @db.VarChar(9)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //relações
  cliente Cliente @relation(fields: [clienteId], references: [id])

  @@map("Contacto dos Clientes")
}

model Contacto_filial {
  id        String   @id @default(cuid())
  filialId  String
  telefone  String   @unique @db.VarChar(9)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //relações
  autor Filial @relation(fields: [filialId], references: [id])

  @@map("Contacto das cooperativas")
}

model Recolha {
  id          String     @id @default(cuid())
  clienteId   String
  motoristaId String
  status      StatusEnum
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  //relações
  cliente   Cliente   @relation(fields: [clienteId], references: [id])
  motorista Motorista @relation(fields: [motoristaId], references: [id])
}
